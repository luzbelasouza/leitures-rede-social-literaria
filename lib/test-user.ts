import { supabase } from './supabase'

export const createTestUser = async () => {
  // Se o Supabase n칚o estiver configurado, apenas log sem erro
  if (!supabase) {
    console.log('游댢 Modo demonstra칞칚o ativo - Supabase n칚o configurado')
    console.log('游닇 Para conectar ao Supabase, clique no bot칚o "Connect to Supabase" no topo da tela')
    return
  }


  try {
    // Verificar se o usu치rio de teste j치 existe tentando fazer login
    const { data: existingUser, error: loginError } = await supabase.auth.signInWithPassword({
      email: 'teste@teste.com',
      password: '123456'
    })

    if (existingUser.user && !loginError) {
      console.log('Usu치rio de teste j치 existe:', existingUser.user.email)
      await supabase.auth.signOut() // Fazer logout ap칩s verifica칞칚o
      return existingUser.user
    }

    // Se n칚o existe ou houve erro, tentar criar o usu치rio
    console.log('Criando usu치rio de teste...')
    const { data, error } = await supabase.auth.signUp({
      email: 'teste@teste.com',
      password: '123456',
      options: {
        data: {
          name: 'Usu치rio Teste'
        },
        emailRedirectTo: undefined, // Desabilita confirma칞칚o por email
        captcha: undefined
      }
    })

    if (error) {
      console.error('Erro ao criar usu치rio de teste:', error)
      // Se o usu치rio j치 existe, n칚o 칠 um erro cr칤tico
      if (error.message?.includes('already registered')) {
        console.log('Usu치rio de teste j치 existe no sistema')
        return null
      }
      return null
    }

    if (data.user) {
      // Criar perfil do usu치rio
      const { error: profileError } = await supabase
        .from('profiles')
        .insert({
          id: data.user.id,
          name: 'Usu치rio Teste',
          bio: 'Usu치rio de teste para demonstra칞칚o do Leitures',
          avatar_url: null
        })

      if (profileError) {
        console.error('Erro ao criar perfil:', profileError)
        // N칚o falhar se o perfil j치 existir
      }

      // Criar alguns posts de exemplo
      const samplePosts = [
        {
          user_id: data.user.id,
          content: 'A vida 칠 como andar de bicicleta. Para manter o equil칤brio, voc칡 deve continuar se movendo.',
          book_title: 'Einstein: Sua Vida e Seus Mundos',
          book_link: 'https://www.amazon.com.br/Einstein-Sua-Vida-Seus-Mundos/dp/8535926457',
          image_url: 'https://images.pexels.com/photos/1029141/pexels-photo-1029141.jpeg?auto=compress&cs=tinysrgb&w=800'
        },
        {
          user_id: data.user.id,
          content: 'N칚o 칠 sobre ter tempo. 칄 sobre fazer tempo.',
          book_title: 'A Sutil Arte de Ligar o F*da-se',
          book_link: null,
          image_url: 'https://images.pexels.com/photos/1029147/pexels-photo-1029147.jpeg?auto=compress&cs=tinysrgb&w=800'
        }
      ]

      const { error: postsError } = await supabase
        .from('posts')
        .insert(samplePosts)

      if (postsError) {
        console.error('Erro ao criar posts de exemplo:', postsError)
      }

      console.log('Usu치rio de teste criado com sucesso:', data.user.email)
      
      // Fazer logout ap칩s criar o usu치rio
      await supabase.auth.signOut()
      return data.user
    }

    return null
  } catch (error) {
    console.error('Erro ao criar usu치rio de teste:', error)
    return null
  }
}
